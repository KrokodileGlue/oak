oak: input:
class CLASS {
	fn FUNCTION ARG1 ARG2 {
		var VARIABLE-A = "foo";
		print "test"
	}

	var VARIABLE-B VARIABLE-C = 2, 3;
}

/*if true {
	var something;
} else {
	var other-thing;
}
*/

/*
if true:
	var something;
else
	var other-thing;
*/

/*
foo[5 * 5];
-f(a = -85 * 92 - 23 ? b++ = (25 * (22 + 38)) : --c = 63)[43];
*/

oak: now lexing...
type       | data       | file       | index   | length | eol?  | value   
--------------------------------------------------------------------------
   KEYWORD |      class |     test.k |       0 |      5 | false | class
IDENTIFIER |            |     test.k |       6 |      5 | false | CLASS
    SYMBOL |          { |     test.k |      12 |      1 |  true | {
   KEYWORD |         fn |     test.k |      15 |      2 | false | fn
IDENTIFIER |            |     test.k |      18 |      8 | false | FUNCTION
IDENTIFIER |            |     test.k |      27 |      4 | false | ARG1
IDENTIFIER |            |     test.k |      32 |      4 | false | ARG2
    SYMBOL |          { |     test.k |      37 |      1 |  true | {
   KEYWORD |        var |     test.k |      41 |      3 | false | var
IDENTIFIER |            |     test.k |      45 |     10 | false | VARIABLE-A
    SYMBOL |          = |     test.k |      56 |      1 | false | =
    STRING |            |     test.k |      58 |      5 | false | "foo"
    SYMBOL |          ; |     test.k |      63 |      1 |  true | ;
   KEYWORD |      print |     test.k |      67 |      5 | false | print
    STRING |            |     test.k |      73 |      6 |  true | "test"
    SYMBOL |          } |     test.k |      81 |      1 |  true | }
   KEYWORD |        var |     test.k |      85 |      3 | false | var
IDENTIFIER |            |     test.k |      89 |     10 | false | VARIABLE-B
IDENTIFIER |            |     test.k |     100 |     10 | false | VARIABLE-C
    SYMBOL |          = |     test.k |     111 |      1 | false | =
   INTEGER |          2 |     test.k |     113 |      1 | false | 2
    SYMBOL |          , |     test.k |     114 |      1 | false | ,
   INTEGER |          3 |     test.k |     116 |      1 | false | 3
    SYMBOL |          ; |     test.k |     117 |      1 |  true | ;
    SYMBOL |          } |     test.k |     119 |      1 |  true | }
       END |            |     test.k |     318 |      1 | false | 
oak: now parsing...
(root)
`-- (stmt class)
    |-- (name)
    |   `-- (CLASS)
    |-- (stmt function definition)
    |   |-- (name)
    |   |   `-- (FUNCTION)
    |   |-- (arguments)
    |   |   |-- (ARG1)
    |   |   `-- (ARG2)
    |   `-- (body)
    |       `-- (stmt block)
    |           |-- (stmt variable declaration)
    |           |   `-- (VARIABLE-A)
    |           |       `-- (string "foo")
    |           `-- (stmt print)
    |               `-- (string "test")
    `-- (stmt variable declaration)
        |-- (VARIABLE-B)
        |   `-- (integer 2)
        `-- (VARIABLE-C)
            `-- (integer 3)
oak: generating symbol table...
<*global* : global>
  num_children=1
  id=0
        <CLASS : class>
          num_children=3
          id=210669811259
                <FUNCTION : function>
                  num_children=3
                  id=7570980975658827
                        <ARG1 : argument>
                          num_children=0
                          id=6383868496
                        <ARG2 : argument>
                          num_children=0
                          id=6383868497
                        <*block* : block>
                          num_children=1
                          id=229388050762308
                                <VARIABLE-A : variable>
                                  num_children=0
                                  id=8245512915541118777
                <VARIABLE-B : variable>
                  num_children=0
                  id=8245512915541118778
                <VARIABLE-C : variable>
                  num_children=0
                  id=8245512915541118779
