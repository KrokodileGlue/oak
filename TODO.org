* Modules
This is mostly working at a theoretical level, but the symbol table
stuff will have to be rewritten eventually for binary files to
work. At the moment, the compiler doesn't know anything about modules,
so accessing a variable or function across modules doesn't work. I'll
have to work out the namespace resolution operator (::) as well.

** TODO Rewrite symbol table generation

* Garbage collection
The garbage collector functions only as an allocator right now. I'll
have to do more research into gc techniques.

* TODO
** Assignment should copy, not reference (INSTR_COPY)
** Global arrays
** } should work as an expression terminator
** The call stack shouldn't be reallocated every time something is pushed or popped
** Postfix if (when?)
** The `die' keyword
** Remove classes
** Functions should be first-class objects.
INSTR_JMP and INSTR_CALL should use register arguments. Function
definitions should be able to appear in expressions; evaluating a
function definition in an expression context should return a VAL_FN.
